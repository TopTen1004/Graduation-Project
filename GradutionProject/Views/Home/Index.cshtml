@model CascadingDropdownViewModel
                      
<div id="container" >  <h3> <p> اختر تخصصك </p> </h3> <div class="centered-select"><label for="country"></label> <select id="country" name="country"  onchange="loadCities()"> <option value="">Select a country</option> @foreach (var country in Model.Countries) 
    { <option value="@country.Id">@country.Name</option> }  </select> </div>
    
    <div> <label for="cities"></label> <div id="cityCheckboxes"> 
</div>
</div> <div class="centered-select">
   
    <div id="percentage" class="big-text"></div>
</div>

<button id="showStatusButton" onclick="showStatus()">احسب التقدم </button>

<div id="statusWrapper" style="display: none;">
    <div id="status"></div>
    <div style=" margin: auto;
  width: 50%;
  padding: 10px;" id="recommendedCities"></div>
</div>

</div> 
<script>
    function calculatePercentage() {
        var checkboxes = $('#cityCheckboxes').find(':checkbox');
        var checkedCount = checkboxes.filter(':checked').length;
        var totalCount = checkboxes.length;
        var percentage = (checkedCount / totalCount) * 100 || 0;
        $('#percentage').text('Checked: ' + percentage.toFixed(2) + '%');
    }

   function loadCities() {
    var countryId = $('#country').val();
    if (countryId) {
        $.ajax({
            url: '@Url.Action("LoadCities", "Home")',
            type: 'GET',
            data: { countryId: countryId },
            success: function (response) {
                var cityCheckboxes = $('#cityCheckboxes');
                cityCheckboxes.empty();

                // Group courses based on the level
                var groupedCities = groupCitiesByLevel(response);

                // Create tables for each group of courses
                $.each(groupedCities, function (level, cities) {
                    // Create label for the level
                    var levelLabel = $('<label>').addClass('level-label').text('المستوى ' + level);
                 

                    // Append the provided HTML content
                    var htmlContent = `
                        <h1><span class="blue">&lt;</span>${level} المستوى<span class="blue" >&gt;</span> <span class="yellow"></span></h1>

                        <table class="container">
                            <thead>
                                <tr>
                                    <th>الرمز</th>
                                    <th>الساعات</th>
                                    <th>اسم المادة</th>
                                    <th>رقم المادة </th>
                                    <th>هل اجتزتها </th>
                                </tr>
                            </thead>
                            <tbody>
                    `;

                    // Create table rows for each course in the group
                    $.each(cities, function (index, city) {
                        htmlContent += `
                            <tr>
                                        <td>${city.courseKey}</td>
                                <td>${city.hours}</td>
                                <td>${city.courseName}</td>
                                <td>${city.courseNumber}</td>
                                <td><input type="checkbox" id="${city.id}" name="r" value="${city.value}" ${city.checked ? 'checked' : ''}></td>
                            </tr>
                        `;
                    });

                    htmlContent += `
                            </tbody>
                            
                        </table>
                        <br/>
                        <br/>
                    `;

                    cityCheckboxes.append(htmlContent);
                });

                // Hide the status table when a different course is selected
                $('#statusWrapper').hide();
            },
            error: function () {
                alert('Error retrieving cities.');
            }
        });
    } else {
        $('#cityCheckboxes').empty();
        $('#statusWrapper').hide();
    }
}
    function groupCitiesByLevel(cities) {
        var groupedCities = {};

        // Group courses based on the level
        $.each(cities, function (index, city) {
            var level = city.level.toString();

            if (!groupedCities[level]) {
                groupedCities[level] = [];
            }

            groupedCities[level].push(city);
        });

        return groupedCities;
    }

    function selectAllCities() {
        var selectAll = $('#select-all');
        var checkboxes = $('#cityCheckboxes').find(':checkbox');
        checkboxes.prop('checked', selectAll.prop('checked'));
        updatePercentage();
    }

    function updatePercentage() {
        var checkboxes = $('#cityCheckboxes').find(':checkbox');
        var checkedCount = checkboxes.filter(':checked').length;
        var totalCount = checkboxes.length;
        var percentage = (checkedCount / totalCount) * 100 || 0;
        $('#percentage').text(percentage.toFixed(2) + '%');
    }
function showStatus() {
    var checkboxes = $('#cityCheckboxes').find(':checkbox');
    var checkedCount = checkboxes.filter(':checked').length;
    var totalCount = checkboxes.length;
    var percentage = (checkedCount / totalCount) * 100 || 0;

    // Create the HTML table for status
    var statusTable = $('<table>').addClass('status-table');
    var headerRow = $('<tr>').html('<th>المواد المجتازة </th><th>المواد الغير مجتازة </th><th>نسبة التقدم </th><th>عدد المواد الكلي </th>');
    var dataRow = $('<tr>').html('<td>' + checkedCount + '</td><td>' + (totalCount - checkedCount) + '</td><td>' + percentage.toFixed(2) + '%</td><td>' + totalCount + '</td>');

    statusTable.append(headerRow);
    statusTable.append(dataRow);

    // Display the status table
    $('#status').empty().append(statusTable);
    $('#statusWrapper').show();

    // Show the recommended courses table
    showRecommendedCities();
}

    function showRecommendedCities() {
        // Get the courses checkboxes
        var checkboxes = $('#cityCheckboxes').find(':checkbox');

        // Filter the unchecked courses
        var uncheckedCities = checkboxes.filter(':not(:checked)');

        // Sort the unchecked courses based on their level in ascending order
        uncheckedCities.sort(function (a, b) {
            return $(a).closest('table').find('th:first').text().localeCompare($(b).closest('table').find('th:first').text());
        });

        // Create the HTML table for recommended courses
        var recommendedTable = $('<table>').addClass('recommended-table');
        var headerRow = $('<tr>').html('<th>رمز المادة</th><th>الساعات</th><th>اسم المادة</th><th>رقم المادة</th>');
        recommendedTable.append(headerRow);

        // Iterate through the sorted unchecked courses and select the top 7 courses
        uncheckedCities.each(function (index) {
            if (index < 6) {
                var cityRow = $(this).closest('tr');
                var cityCode = cityRow.find('td:first').text();
                var cityHours = cityRow.find('td:nth-child(2)').text();
                var cityName = cityRow.find('td:nth-child(3)').text();
                var cityNumber = cityRow.find('td:nth-child(4)').text();

                var rowData = $('<tr>').html('<td>' + cityCode + '</td><td>' + cityHours + '</td><td>' + cityName + '</td><td>' + cityNumber + '</td>');
                recommendedTable.append(rowData);
            }
        });

        var heading = $('<h1>').text('المواد المقترحة للترم القادم').addClass('recommended-h');

        // Display the recommended courses table with the heading
        $('#recommendedCities').empty().append('<br/>').append(heading).append('<br/>').append(recommendedTable);
    }
 
</script>
}
}